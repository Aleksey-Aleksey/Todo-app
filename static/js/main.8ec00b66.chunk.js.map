{"version":3,"sources":["types/Status.ts","components/TodosContext.tsx","components/hooks/useLoclStorage.ts","components/TodoItem.tsx","components/TodoList.tsx","components/Footer.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["Status","TodosContext","React","createContext","todos","setTodos","isToggleAllStatus","setIsToggleAllStatus","filterStatus","ALL","setFilterStatus","filterTodos","TodoProvider","children","key","startValue","useState","data","localStorage","getItem","JSON","parse","e","removeItem","value","setValue","newValue","setItem","stringify","useLocalStorage","ACTIVE","filter","todo","completed","COMPLETED","todoState","useMemo","Provider","TodoItem","useContext","isEditStatus","setIsEditStatus","id","title","editInput","setEditInput","editFocus","useRef","useEffect","current","focus","handleDeletedTodo","selected","delTodo","el","handleOnBlur","trim","map","className","classNames","editing","onDoubleClick","type","checked","onChange","todoID","newTodo","every","curTodo","handleCompletedTodo","aria-label","data-cy","onClick","ref","onKeyUp","event","target","onBlur","TodoList","todosFilter","length","htmlFor","Footer","uncompletedTodos","href","Header","titleTodo","setTitleTodo","inputFocus","onSubmit","preventDefault","Date","placeholder","App","root","document","getElementById","render"],"mappings":"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","file":"static/js/main.8ec00b66.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n","import React, { useMemo, useState } from 'react';\nimport { Todo } from '../types/Todo';\nimport { Status } from '../types/Status';\nimport { useLocalStorage } from './hooks/useLoclStorage';\n\ntype TodoContext = {\n  todos: Todo[],\n  setTodos: (v: Todo[]) => void,\n  isToggleAllStatus: boolean,\n  setIsToggleAllStatus: (value: boolean) => void,\n  filterStatus: Status,\n  setFilterStatus: (status: Status) => void,\n  filterTodos: () => Todo[],\n};\n\nexport const TodosContext = React.createContext<TodoContext>({\n  todos: [],\n  setTodos: () => { },\n  isToggleAllStatus: false,\n  setIsToggleAllStatus: () => { },\n  filterStatus: Status.ALL,\n  setFilterStatus: () => { },\n  filterTodos: () => [],\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useLocalStorage<Todo[]>('todos', []);\n  const [isToggleAllStatus, setIsToggleAllStatus] = useState<boolean>(false);\n  const [filterStatus, setFilterStatus] = useState<Status>(Status.ALL);\n\n  const filterTodos = () => {\n    switch (filterStatus) {\n      case (Status.ACTIVE):\n        return todos.filter(todo => !todo.completed);\n\n      case (Status.COMPLETED):\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  const todoState = useMemo(() => ({\n    todos,\n    setTodos,\n    isToggleAllStatus,\n    setIsToggleAllStatus,\n    filterStatus,\n    setFilterStatus,\n    filterTodos,\n  }), [todos, filterStatus, filterTodos, setTodos, isToggleAllStatus]);\n\n  return (\n    <TodosContext.Provider value={todoState}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import { useState } from 'react';\n\nexport function useLocalStorage<T>(\n  key: string,\n  startValue: T,\n): [T, (v: T) => void] {\n  const [value, setValue] = useState(() => {\n    const data = localStorage.getItem(key);\n\n    if (!data) {\n      return startValue;\n    }\n\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      localStorage.removeItem(key);\n\n      return startValue;\n    }\n  });\n\n  const save = (newValue: T) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setValue(newValue);\n  };\n\n  return [value, save];\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  useEffect,\n  useRef,\n  useState,\n  useContext,\n} from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { TodosContext } from './TodosContext';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { todos, setTodos, setIsToggleAllStatus } = useContext(TodosContext);\n  const [isEditStatus, setIsEditStatus] = useState(false);\n\n  const { completed, id, title } = todo;\n\n  const [editInput, setEditInput] = useState(title);\n\n  const editFocus = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    if (editFocus.current) {\n      editFocus.current.focus();\n    }\n  }, [isEditStatus]);\n\n  const handleCompletedTodo = (todoID: number) => {\n    const newTodo = todos.map(el => (\n      el.id === todoID\n        ? { ...el, completed: !el.completed }\n        : el\n    ));\n\n    setTodos(newTodo);\n\n    setIsToggleAllStatus(newTodo.every(curTodo => curTodo.completed));\n  };\n\n  const handleDeletedTodo = (selected: Todo) => {\n    const delTodo = todos.filter(el => el !== selected);\n\n    setTodos([...delTodo]);\n  };\n\n  const handleOnBlur = () => {\n    setIsEditStatus(false);\n\n    if (!editInput.trim()) {\n      handleDeletedTodo(todo);\n\n      return;\n    }\n\n    setTodos(todos.map(el => (\n      el !== todo\n        ? el\n        : { ...todo, title: editInput.trim() }\n    )));\n\n    setEditInput(editInput.trim());\n  };\n\n  const handleKey = (event: React.KeyboardEvent) => {\n    switch (event.key) {\n      case ('Escape'):\n        setEditInput(title);\n        setIsEditStatus(false);\n        break;\n\n      case ('Enter'):\n        handleOnBlur();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed,\n        editing: isEditStatus,\n      })}\n      onDoubleClick={() => setIsEditStatus(true)}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"toggle-view\"\n          checked={completed}\n          onChange={() => handleCompletedTodo(id)}\n        />\n        <label onDoubleClick={() => setIsEditStatus(true)}>\n          {title}\n        </label>\n        <button\n          aria-label=\"toggle-view\"\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n          onClick={() => handleDeletedTodo(todo)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        ref={editFocus}\n        onKeyUp={handleKey}\n        value={editInput}\n        onChange={event => setEditInput(event.target.value)}\n        onBlur={handleOnBlur}\n      />\n    </li>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useContext } from 'react';\nimport { TodoItem } from './TodoItem';\nimport { TodosContext } from './TodosContext';\n\ntype Props = {};\n\nexport const TodoList: React.FC<Props> = () => {\n  const {\n    todos,\n    setTodos,\n    isToggleAllStatus,\n    setIsToggleAllStatus,\n    filterTodos,\n  } = useContext(TodosContext);\n\n  const handleTogleAll = () => {\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: !isToggleAllStatus,\n    })));\n\n    setIsToggleAllStatus(!isToggleAllStatus);\n  };\n\n  const todosFilter = filterTodos();\n\n  return (\n    <>\n      {todos.length > 0 && (\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            data-cy=\"toggleAll\"\n            onChange={handleTogleAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\" data-cy=\"todosList\">\n            {todosFilter.map(todo => (\n              <TodoItem todo={todo} key={todo.id} />\n            ))}\n          </ul>\n        </section>\n      )}\n    </>\n  );\n};\n","import React, {\n  useContext,\n} from 'react';\nimport classNames from 'classnames';\nimport { TodosContext } from './TodosContext';\nimport { Status } from '../types/Status';\n\ntype Props = {};\n\nexport const Footer: React.FC<Props> = () => {\n  const {\n    todos,\n    setTodos,\n    setIsToggleAllStatus,\n    filterStatus,\n    setFilterStatus,\n  } = useContext(TodosContext);\n\n  const handleClearTodo = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n    setIsToggleAllStatus(false);\n  };\n\n  const uncompletedTodos = todos.filter(todo => !todo.completed).length;\n\n  return (\n    <>\n      {todos.length > 0 && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\" data-cy=\"todosCounter\">\n            {uncompletedTodos === 1 ? '1 item left' : `${uncompletedTodos} items left`}\n          </span>\n\n          <ul className=\"filters\" data-cy=\"todosFilter\">\n            <li>\n              <a\n                href=\"#/\"\n                className={classNames({\n                  selected: Status.ALL === filterStatus,\n                })}\n                onClick={() => setFilterStatus(Status.ALL)}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={classNames({\n                  selected: Status.ACTIVE === filterStatus,\n                })}\n                onClick={() => setFilterStatus(Status.ACTIVE)}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={classNames({\n                  selected: Status.COMPLETED === filterStatus,\n                })}\n                onClick={() => setFilterStatus(Status.COMPLETED)}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          {uncompletedTodos !== todos.length && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={handleClearTodo}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )}\n    </>\n  );\n};\n","import React, {\n  useEffect,\n  useRef,\n  useState,\n  useContext,\n} from 'react';\nimport { TodosContext } from './TodosContext';\n\nexport const Header = () => {\n  const { todos, setTodos } = useContext(TodosContext);\n  const [titleTodo, setTitleTodo] = useState('');\n\n  const inputFocus = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputFocus.current) {\n      inputFocus.current.focus();\n    }\n  }, []);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleTodo(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!titleTodo.trim()) {\n      return;\n    }\n\n    const newTodo = {\n      id: +new Date(),\n      title: titleTodo,\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n\n    setTitleTodo('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          data-cy=\"createTodo\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          ref={inputFocus}\n          value={titleTodo}\n          onChange={handleTitleChange}\n        />\n      </form>\n    </header>\n  );\n};\n","import React from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoProvider } from './components/TodosContext';\nimport { Footer } from './components/Footer';\nimport { Header } from './components/Header';\n\nexport const App: React.FC = () => {\n  return (\n    <TodoProvider>\n      <div className=\"todoapp\">\n        <Header />\n        <TodoList />\n        <Footer />\n      </div>\n    </TodoProvider>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nconst root = document.getElementById('root');\n\nrender(<App />, root);\n"],"sourceRoot":""}